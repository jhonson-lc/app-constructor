---
import Layout from "../../layouts/Layout.astro";
---

<Layout
  title="Iniciar Sesión"
  description="Página de inicio de sesión para usuarios."
>
  <div
    id="auth-container"
    class="min-h-screen flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8"
  >
    <div class="max-w-md w-full space-y-8">
      <!-- Login Form -->
      <div id="login-form" class="bg-white p-8 rounded-lg shadow-md">
        <div class="text-center mb-8">
          <h2 class="text-3xl font-bold text-gray-900">Iniciar Sesión</h2>
          <p class="mt-2 text-sm text-gray-600">Ingresa a tu cuenta</p>
        </div>

        <form id="loginForm" class="space-y-6">
          <div>
            <label
              for="login-username"
              class="block text-sm font-medium text-gray-700"
            >
              Correo electrónico
            </label>
            <input
              id="login-username"
              name="username"
              type="email"
              required
              class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              placeholder="tu@email.com"
            />
          </div>

          <div>
            <label
              for="login-password"
              class="block text-sm font-medium text-gray-700"
            >
              Contraseña
            </label>
            <input
              id="login-password"
              name="password"
              type="password"
              required
              class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              placeholder="••••••••"
            />
          </div>

          <div class="flex items-center justify-between">
            <div class="flex items-center">
              <input
                id="remember-me"
                name="remember-me"
                type="checkbox"
                class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
              />
              <label for="remember-me" class="ml-2 block text-sm text-gray-900">
                Recordarme
              </label>
            </div>

            <div class="text-sm">
              <a href="#" class="font-medium text-blue-600 hover:text-blue-500">
                ¿Olvidaste tu contraseña?
              </a>
            </div>
          </div>

          <button
            type="submit"
            id="login-btn"
            class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed"
          >
            Iniciar Sesión
          </button>
        </form>

        <!-- Error/Success Messages -->
        <div id="login-message" class="mt-4 hidden">
          <div class="rounded-md p-4">
            <div class="flex">
              <div class="ml-3">
                <p class="text-sm font-medium" id="login-message-text"></p>
              </div>
            </div>
          </div>
        </div>

        <div class="mt-6 text-center">
          <p class="text-sm text-gray-600">
            ¿No tienes cuenta?
            <button
              id="show-register"
              class="font-medium text-blue-600 hover:text-blue-500 cursor-pointer"
            >
              Regístrate aquí
            </button>
          </p>
        </div>
      </div>

      <!-- Register Form -->
      <div id="register-form" class="bg-white p-8 rounded-lg shadow-md hidden">
        <div class="text-center mb-8">
          <h2 class="text-3xl font-bold text-gray-900">Crear Cuenta</h2>
          <p class="mt-2 text-sm text-gray-600">
            Completa tus datos para registrarte
          </p>
        </div>

        <form id="registerForm" class="space-y-6">
          <div class="grid grid-cols-1 gap-6 sm:grid-cols-2">
            <div>
              <label
                for="firstname"
                class="block text-sm font-medium text-gray-700"
              >
                Nombre
              </label>
              <input
                id="firstname"
                name="firstname"
                type="text"
                required
                class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                placeholder="Juan"
              />
            </div>

            <div>
              <label
                for="lastname"
                class="block text-sm font-medium text-gray-700"
              >
                Apellido
              </label>
              <input
                id="lastname"
                name="lastname"
                type="text"
                required
                class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                placeholder="Pérez"
              />
            </div>
          </div>

          <div>
            <label
              for="username"
              class="block text-sm font-medium text-gray-700"
            >
              Nombre de usuario
            </label>
            <input
              id="username"
              name="username"
              type="text"
              required
              class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              placeholder="juanperez"
            />
          </div>

          <div>
            <label
              for="register-email"
              class="block text-sm font-medium text-gray-700"
            >
              Correo electrónico
            </label>
            <input
              id="register-email"
              name="email"
              type="email"
              required
              class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              placeholder="juan@email.com"
            />
          </div>

          <div>
            <label
              for="register-password"
              class="block text-sm font-medium text-gray-700"
            >
              Contraseña
            </label>
            <input
              id="register-password"
              name="password"
              type="password"
              required
              class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              placeholder="••••••••"
            />
          </div>

          <div>
            <label
              for="confirm-password"
              class="block text-sm font-medium text-gray-700"
            >
              Confirmar contraseña
            </label>
            <input
              id="confirm-password"
              name="confirmPassword"
              type="password"
              required
              class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              placeholder="••••••••"
            />
          </div>

          <div class="flex items-center">
            <input
              id="terms"
              name="terms"
              type="checkbox"
              required
              class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
            />
            <label for="terms" class="ml-2 block text-sm text-gray-900">
              Acepto los
              <a href="#" class="text-blue-600 hover:text-blue-500"
                >términos y condiciones</a
              >
            </label>
          </div>

          <button
            type="submit"
            id="register-btn"
            class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition duration-150 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed"
          >
            Crear Cuenta
          </button>
        </form>

        <!-- Error/Success Messages -->
        <div id="register-message" class="mt-4 hidden">
          <div class="rounded-md p-4">
            <div class="flex">
              <div class="ml-3">
                <p class="text-sm font-medium" id="register-message-text"></p>
              </div>
            </div>
          </div>
        </div>

        <div class="mt-6 text-center">
          <p class="text-sm text-gray-600">
            ¿Ya tienes cuenta?
            <button
              id="show-login"
              class="font-medium text-blue-600 hover:text-blue-500 cursor-pointer"
            >
              Inicia sesión aquí
            </button>
          </p>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script>
  // API Configuration
  const API_BASE_URL = "http://localhost:8081/api/auth";

  // DOM Elements
  const loginForm = document.getElementById("login-form") as HTMLElement;
  const registerForm = document.getElementById("register-form") as HTMLElement;
  const showRegisterBtn = document.getElementById(
    "show-register"
  ) as HTMLElement;
  const showLoginBtn = document.getElementById("show-login") as HTMLElement;
  const loginFormElement = document.getElementById("loginForm") as HTMLElement;
  const registerFormElement = document.getElementById(
    "registerForm"
  ) as HTMLElement;
  const loginMessage = document.getElementById("login-message") as HTMLElement;
  const registerMessage = document.getElementById(
    "register-message"
  ) as HTMLElement;
  const loginBtn = document.getElementById("login-btn") as HTMLElement;
  const registerBtn = document.getElementById("register-btn") as HTMLElement;

  // Form Toggle Functions
  showRegisterBtn.addEventListener("click", () => {
    loginForm.classList.add("hidden");
    registerForm.classList.remove("hidden");
    clearMessages();
  });

  showLoginBtn.addEventListener("click", () => {
    registerForm.classList.add("hidden");
    loginForm.classList.remove("hidden");
    clearMessages();
  });

  // Message Functions
  function showMessage(messageElement, text, isError = false) {
    const messageText = messageElement.querySelector("p");
    const messageContainer = messageElement.querySelector("div > div");

    messageText.textContent = text;
    messageContainer.className = `rounded-md p-4 ${isError ? "bg-red-50" : "bg-green-50"}`;
    messageText.className = `text-sm font-medium ${isError ? "text-red-800" : "text-green-800"}`;
    messageElement.classList.remove("hidden");
  }

  function clearMessages() {
    loginMessage.classList.add("hidden");
    registerMessage.classList.add("hidden");
  }

  // API Functions
  async function makeRequest(url, data) {
    try {
      const response = await fetch(url, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
        body: JSON.stringify(data),
      });

      const result = await response.json();

      return {
        success: response.ok,
        data: result,
        status: response.status,
      };
    } catch (error) {
      console.error("Request error:", error);
      return {
        success: false,
        data: {
          message:
            "Error de conexión. Verifica que el servidor esté funcionando.",
        },
        status: 0,
      };
    }
  }

  // Login Handler
  loginFormElement.addEventListener("submit", async (e) => {
    e.preventDefault();

    const formData = new FormData(e.target);
    const loginData = {
      username: formData.get("username"),
      password: formData.get("password"),
    };

    clearMessages();
    loginBtn.disabled = true;
    loginBtn.textContent = "Iniciando sesión...";

    console.log({ loginData });

    try {
      const result = await makeRequest(`${API_BASE_URL}/login`, loginData);

      if (result.success) {
        showMessage(
          loginMessage,
          "Inicio de sesión exitoso. Redirigiendo...",
          false
        );

        // Store token if provided
        if (result.data.token) {
          localStorage.setItem("authToken", result.data.token);
        }

        // Store user data if provided
        if (result.data.user) {
          localStorage.setItem("userData", JSON.stringify(result.data.user));
        }

        // Redirect after success (customize as needed)
        setTimeout(() => {
          window.location.href = "/dashboard"; // Change to your desired redirect
        }, 1500);
      } else {
        const errorMessage = result.data.message || "Credenciales inválidas";
        showMessage(loginMessage, errorMessage, true);
      }
    } catch (error) {
      showMessage(loginMessage, "Error inesperado. Inténtalo de nuevo.", true);
    } finally {
      loginBtn.disabled = false;
      loginBtn.textContent = "Iniciar Sesión";
    }
  });

  // Register Handler
  registerFormElement.addEventListener("submit", async (e) => {
    e.preventDefault();

    const formData = new FormData(e.target);
    const password = formData.get("password");
    const confirmPassword = formData.get("confirmPassword");

    // Password validation
    if (password !== confirmPassword) {
      showMessage(registerMessage, "Las contraseñas no coinciden", true);
      return;
    }

    const registerData = {
      firstname: formData.get("firstname"),
      lastname: formData.get("lastname"),
      username: formData.get("username"),
      email: formData.get("email"),
      password: password,
    };

    clearMessages();
    registerBtn.disabled = true;
    registerBtn.textContent = "Creando cuenta...";

    try {
      const result = await makeRequest(
        `${API_BASE_URL}/register`,
        registerData
      );

      if (result.success) {
        showMessage(
          registerMessage,
          "Cuenta creada exitosamente. Puedes iniciar sesión ahora.",
          false
        );

        // Clear form
        registerFormElement.reset();

        // Switch to login form after a delay
        setTimeout(() => {
          registerForm.classList.add("hidden");
          loginForm.classList.remove("hidden");
          clearMessages();
        }, 2000);
      } else {
        const errorMessage = result.data.message || "Error al crear la cuenta";
        showMessage(registerMessage, errorMessage, true);
      }
    } catch (error) {
      showMessage(
        registerMessage,
        "Error inesperado. Inténtalo de nuevo.",
        true
      );
    } finally {
      registerBtn.disabled = false;
      registerBtn.textContent = "Crear Cuenta";
    }
  });

  // Check if user is already logged in
  function checkAuthStatus() {
    const token = localStorage.getItem("authToken");
    if (token) {
      // Optional: Verify token with server
      // For now, just redirect if token exists
      // window.location.href = '/dashboard';
    }
  }

  // Initialize
  checkAuthStatus();
</script>
